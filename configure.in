################################################################################
#                           Standard Stuff
################################################################################
AC_INIT(MESHKIT, 3.99)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE

MK_CHECK_COMPILERS
AM_CONDITIONAL(PARALLEL,[test "x$WITH_MPI" != "xno"])
LIBS="-lm"

AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

AC_CHECK_PROG([ZCAT],[gunzip],[gunzip -c],[])
AC_CHECK_PROG([ZCAT],[gzip],[gzip -cd],[])
AC_CHECK_PROG([ZCAT],[zcat],[zcat],[])
if test "x" = "x$ZCAT"; then
  AC_MSG_WARN([[Cannot run tests: no way to uncompress input files.]])
fi
AC_SUBST([ZCAT])
AM_CONDITIONAL([HAVE_ZCAT],[test "x" = "x$ZCAT"])

MK_TEMPLATE_SPECIALIZATION
DEFINES="$DEFINES $TEMPLATE_SPECIALIZATION"

if test "x" != "x$FC"; then
  AC_FC_WRAPPERS
fi

################################################################################
#                              Version Stuff
################################################################################

AC_DEFINE(MK_VERSION,["AC_PACKAGE_VERSION"],[MeshKit Version])
VERSION_MAJOR=`expr AC_PACKAGE_VERSION : '\([[0-9]]*\)'`
VERSION_MINOR=`expr AC_PACKAGE_VERSION : '[[0-9]]*\.\([[0-9]]*\)'`
VERSION_PATCH=`expr AC_PACKAGE_VERSION : '[[0-9]]*\.[[0-9]]*\.\(.*\)'`
test "x" != "x$VERSION_MAJOR" || AC_MSG_ERROR("Invalid version string: AC_PACKAGE_VERSION")
test "x" != "x$VERSION_MINOR" || AC_MSG_ERROR("Invalid version string: AC_PACKAGE_VERSION")
AC_DEFINE_UNQUOTED(MK_VERSION_MAJOR,$VERSION_MAJOR,[MeshKit Major Version])
AC_DEFINE_UNQUOTED(MK_VERSION_MINOR,$VERSION_MINOR,[MeshKit Minor Version])
if test "x" != "x$VERSION_PATCH"; then
  AC_DEFINE_UNQUOTED(MK_VERSION_PATCH,$VERSION_PATCH,[MeshKit Patch Level])
  VERSION_STRING="AC_PACKAGE_STRING"
elif test $VERSION_MINOR -eq 99; then
  VERSION_STRING="AC_PACKAGE_STRING (Alpha)"
else
  VERSION_STRING="AC_PACKAGE_STRING (Beta)"
fi
AC_DEFINE_UNQUOTED(MK_VERSION_STRING,"${VERSION_STRING}",[MeshKit Version String])


################################################################################
#                             System Headers
################################################################################
AC_CHECK_HEADER([ieeefp.h],[DEFINES="$DEFINES -DHAVE_IEEEFP_H"] )
if test "xyes" = "x$enable_debug"; then
  AC_CHECK_HEADER( [valgrind/memcheck.h], [CPPFLAGS="$CPPFLAGS -DVALGRIND"] )
fi

################################################################################
#                              MPI OPTIONS
################################################################################

if test "x$WITH_MPI" != "xno"; then
  DEFINES="$DEFINES -DUSE_MPI"
  AC_CHECK_HEADER([mpi.h],[],[AC_MSG_ERROR([mpi.h not found or not working])])
  AC_MSG_CHECKING([If -DMPICH_IGNORE_CXX_SEEK is necessary])
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  AC_PREPROC_IFELSE([AC_LANG_PROGRAM( [[#include <stdio.h>
     #include <mpi.h>]],[])],
    [AC_MSG_RESULT([no])],
    [save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$CPPFLAGS -DMPICH_IGNORE_CXX_SEEK"
     AC_PREPROC_IFELSE([AC_LANG_PROGRAM( [[#include <stdio.h>
         #include <mpi.h>]],[])],
         [AC_MSG_RESULT([yes]); AM_CPPFLAGS="$AM_CPPLFLAGS -DMPICH_IGNORE_CXX_SEEK" ],
         [AC_MSG_ERROR([mpi.h is not usable])]),
     CPPFLAGS="$save_CPPFLAGS"])
  AC_LANG_RESTORE
fi
AM_CONDITIONAL(USE_MPI, [test "xno" != "x$WITH_MPI"])

###############################################################################
#                           Optional Tools
###############################################################################
  # Define a macro to avoid typing this for each individual tool
  # Usage: MK_OPTIONAL_TOOL( name, default )
  #  name      - name of option
  #  default   - yes/no, $ENABLE_TOOLS overrides this if set
  # Actions:
  #  sets ENABLE_${tool} to 'yes' or 'no'
  #  creates ENABLE_${tool} automake conditional
AC_DEFUN([MK_OPTIONAL_TOOL],[
  mk_default_$1=$2
  if test "x" != "x$ENABLE_TOOLS"; then
    mk_default_$1="$ENABLE_TOOLS"
  fi
  AC_ARG_ENABLE( [$1],
[AC_HELP_STRING([--enable-$1],[Build tool: $1])
AC_HELP_STRING([--disable-$1],[Don't build $1])],
                 [ENABLE_$1=$enableval
DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --enable-$1=\"${enableval}\""
],[ENABLE_$1=${mk_default_$1}] )
  AM_CONDITIONAL([ENABLE_$1],[test "x${ENABLE_$1}" != "xno"])
  AC_MSG_CHECKING([if $1 is to be built])
  AC_MSG_RESULT([${ENABLE_$1}])
])
  # The default for all tools
AC_ARG_ENABLE( [tools], [
AC_HELP_STRING([--enable-tools],[Build all tools by default])
AC_HELP_STRING([--disable-tools],[Disable all tools by default])],
                         [ENABLE_TOOLS=$enableval],[ENABLE_TOOLS=] )
  # Individual tools
MK_OPTIONAL_TOOL([algs],    [yes])
MK_OPTIONAL_TOOL([xforms],    [yes])
MK_OPTIONAL_TOOL([utils],    [yes])

################################################################################
#                           iGeom
################################################################################
AC_ARG_WITH(igeom, 
[AC_HELP_STRING([--with-igeom=DIR], [Specify directory containing iGeom])],
[IGEOM_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-igeom=\"${withval}\""
 ], [IGEOM_DIR=])
case "x$IGEOM_DIR" in
  xno|x)
    IGEOM_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-igeom requires an argument])
    ;;
  *)
    if ! test -d "$IGEOM_DIR"; then
      AC_MSG_WARN([$IGEOM_DIR : not a directory.])
    fi
    IGEOM_MISSING=no
    AC_CHECK_FILE([${IGEOM_DIR}/lib/iGeom-Defs.inc],
                  [IGEOM_CONFIG_OPTIONS="include ${IGEOM_DIR}/lib/iGeom-Defs.inc";
                   DEFINES="$DEFINES -DIGEOM"],
                  [AC_CHECK_FILE([${IGEOM_DIR}/iGeom-Defs.inc],
                                 [IGEOM_CONFIG_OPTIONS="include ${IGEOM_DIR}/iGeom-Defs.inc";
                   DEFINES="$DEFINES -DIGEOM"],
                                 [AC_MSG_WARN([$IGEOM_DIR : not a configured iGeom]); 
                                  IGEOM_MISSING=yes])
                  ])
    ;;
esac
AC_SUBST(IGEOM_DIR)
AC_SUBST(IGEOM_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IGEOM, [test "x$IGEOM_MISSING" = "xno"] )

################################################################################
#                           iMesh
################################################################################
AC_ARG_WITH(imesh, 
[AC_HELP_STRING([--with-imesh=DIR], [Specify directory containing iMesh])],
[IMESH_DIR=$withval
 DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-imesh=\"${withval}\""
 ], [IMESH_DIR=])
case "x$IMESH_DIR" in
  xno|x)
    IMESH_MISSING=yes
    ;;
  xyes)
    AC_MSG_ERROR([--with-imesh requires an argument])
    ;;
  *)
    if ! test -d "$IMESH_DIR"; then
      AC_MSG_WARN([$IMESH_DIR : not a directory.])
    fi
    IMESH_MISSING=no
    AC_CHECK_FILE([${IMESH_DIR}/lib/iMesh-Defs.inc],
                  [IMESH_CONFIG_OPTIONS="include ${IMESH_DIR}/lib/iMesh-Defs.inc";
                   DEFINES="$DEFINES -DIMESH"],
                  [AC_CHECK_FILE([${IMESH_DIR}/iMesh-Defs.inc],
                                 [IMESH_CONFIG_OPTIONS="include ${IMESH_DIR}/iMesh-Defs.inc";
                   DEFINES="$DEFINES -DIMESH"],
                                 [AC_MSG_WARN([$IMESH_DIR : not a configured iMesh]); 
                                  IMESH_MISSING=yes])
                  ])
    AC_CHECK_FILE([${IMESH_DIR}/include/MBInterface.hpp],
                  [DEFINES="$DEFINES -DMOAB"],
                 )
    ;;
esac
AC_SUBST(IMESH_DIR)
AC_SUBST(IMESH_CONFIG_OPTIONS)
AM_CONDITIONAL( HAVE_IMESH, [test "x$IMESH_MISSING" = "xno"] )

################################################################################
#                           Output Files
################################################################################
AC_SUBST([INCLUDES])
AC_SUBST([DEFINES])
AC_SUBST([AM_CPPFLAGS])
AC_SUBST([AM_LDFLAGS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_CFLAGS])
AC_SUBST([DISTCHECK_CONFIGURE_FLAGS])

AC_ARG_VAR([FC], [FORTRAN compiler command])
AC_CONFIG_HEADERS([MKVersion.h])
AC_CONFIG_FILES([Makefile 
                 meshkit.make 
                 testdir.h
		 algs/Makefile
		 xforms/Makefile
		 utils/Makefile
                 ])

AC_OUTPUT

AC_MSG_RESULT([C:   $CC $CFLAGS])
AC_MSG_RESULT([C++: $CXX $CXXFLAGS])
AC_MSG_RESULT([Fortran: $FC $FCFLAGS])

if test "x$IMESH_MISSING" = "xyes"; then
  AC_MSG_WARN([Could not find iMesh library.  Build will FAIL!!! Try \"--with-imesh=DIR\"])
fi
