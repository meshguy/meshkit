------------------------------------------------------------------------------------------------------
Introduction
------------------------------------------------------------------------------------------------------

RGG consists of two programs:
1.'assygen': Generates the geometries and Cubit journal files for meshing. These are based on a user defined input file.
2.'coregen': Takes assembly meshes as input and copy/move/merges them into core specified in the input file.
-------------------------------------------------------------------------------------------------------
In order to use rgg program use standard autotools commands to build 'MeshKit' - https://svn.mcs.anl.gov/repos/fathom/MeshKit/trunk
-------------------------------------------------------------------------------------------------------

autoreconf -fi
./configure --with-igeom=<igeom-dir> --with-imesh=<imesh-dir> --with-irel=<irel-dir> --enable-algs --enable-rgg --enable-debug
make
cd rgg
make assygen coregen
--------------------------------------------------------------------------------------------------------
DEFAULT TEST CASE
--------------------------------------------------------------------------------------------------------

On the MeshKit/rgg directory launch assygen to:
1. assygen
2. cubit
3. play 'assygen_default.jou'
4. coregen coregen_default

The first command "assygen": 
Launches assygen program, reads assygen_default.inp and generates assygen_default.sat, assygen_default.jou, assygen_default.template.jou

The second command "cubit":
Assuming you have Cubit's executable set in your path, this launches Cubit.

The third command "play 'assygen_default.jou'":
Runs the cubit journal file 'assygen_default.jou', imports assygen_default.sat generated by assygen program in the first step, and creates assygen_default.cub.

The fourth command "coregen coregen_default":
Launches coregen program, reads coregen_default.inp and generates the reactor core mesh file coregen_default.h5m. coregen also creates a makefile called 'coregen_defaults.makefile'. This makefile can be used automate the regeneration of assemblies.
-------------------------------------------------------------------------------------------------------
RUNNING 
-------------------------------------------------------------------------------------------------------

A. 'assygen' program
Launch the executable 'assygen' from the rgg directory as follows
usage: assygen <inpufile name WITHOUT EXTENSION> 

RGG by default assumes that:
Input file name is  <input file name WITHOUT EXTENSION>.inp
Geometry file name created by RGG is  <input file name WITHOUT EXTENSION>.sat or .brep based on the geometry engine*
Journal file name created by RGG is  <input file name WITHOUT EXTENSION>.jou

B. 'coregen' program
Launch the executable 'coregen' from the rgg directory as follows
usage: coregen <inpufile name WITHOUT EXTENSION> 
-------------------------------------------------------------------------------------------------------
EXAMPLE (Sample input files can be found in files directory in rgg)
-------------------------------------------------------------------------------------------------------

--> To launch v1(VHTR assembly) from rgg directory issue command 'assygen ./files/v1'
--> There are 3 examples explaining this process in the rgg/files directory. All these examples are complete and can be run by the makefile in their directories.

A. 2-assys
This is an example of creating the sixth of a vhtr reactor core with two assembly types.

B. sq-assy
This example uses cartesian assemblies created by assygen, meshing is done using Cubit and core formation is thro' coregen program.

C. vhtr_sixth
A full VHTR core is setup in this problem.

-------------------------------------------------------------------------------------------------------
A VHTR surface assembly has the following lines:
! #############################################################################################################
! Hexagonal VHTR Control Fuel Block Assembly Definition without CellMaterials (Prism) around individual Pins
! #############################################################################################################
!
Geometry Surface
GeometryType Hexagonal  
!                                     
Materials 10 Mat_C2Coolant C02 Mat_C1Coolant C01 Mat_OCoolant C1Out Mat_Coolant C1 Mat_SCoolant SC1 Mat_Fuel  F1 Mat_Block G1 Mat_Poison P1 Mat_Control R1 Mat_FHH H1       
!
DUCT 2 0.0 0.0 -0 793.0 36.0 37.3  G1 C1Out ! 2 outer squares at 0.0 0.0 height 0.0 to 124.0 x1 y1 x2 y2 material1 material2 
!
Pincells 8 1.87960 
! 1
Cell_Fuel       FC 1
Cylinder  1 0.0 0.0    0.0 793.0   0.6225  F1 
! 2
Cell_BurnPoison BP 1
Cylinder  1 0.0 0.0    0.0 793.0   0.6225  P1 
! 3
Cell_SmallCoolant    SC 1
Cylinder  1 0.0 0.0    0.0 793.0   0.6350 SC1
! 4
Cell_Coolant    CC 1
Cylinder  1 0.0 0.0    0.0 793.0   0.79375 C1
! 5
Cell_FuelHandle FH 0
! 6
Cell_Graphite   GC 0
! 7
Cell_Control CR 1                                         
Cylinder  3  0.0 0.0 0.0 793.0 2.64 4.13 4.7625 C01 R1 C02
! 8
Cell_FHH     FH2 1
Cylinder  1  0.0 0.0 0.0 793.0 2.0 H1                     
Assembly 11                                                 
                     BP  FC  CC  FC  FC  CC  FC  FC  CC  FC  BP
                   FC  CC  FC  FC  GC  GC  GC  GC  FC  FC  CC  FC
                 CC  FC  FC  CC  GC  GC  GC  GC  GC  CC  FC  FC  CC
               FC  FC  CC  FC  GC  GC  GC  GC  GC  GC  FC  CC  FC  FC
             FC  CC  FC  FC  GC  GC  GC  CR  GC  GC  GC  FC  FC  CC  FC
           CC  FC  FC  CC  FC  GC  GC  GC  GC  GC  GC  FC  CC  FC  FC  CC
         FC  FC  CC  FC  FC  CC  GC  GC  GC  GC  GC  CC  FC  FC  CC  FC  FC
       FC  CC  FC  FC  CC  FC  FC  GC  GC  GC  GC  FC  FC  CC  FC  FC  CC  FC
     CC  FC  FC  CC  FC  FC  CC  FC  FC  SC  FC  FC  CC  FC  FC  CC  FC  FC  CC
   FC  FC  CC  FC  FC  CC  FC  FC  SC  FH  FH  SC  FC  FC  CC  FC  FC  CC  FC  FC
 BP  CC  FC  FC  CC  FC  FC  CC  FC  FH  FH2  FH  FC  CC  FC  FC  CC  FC  FC  CC  BP
   FC  FC  CC  FC  FC  CC  FC  FC  SC  FH  FH  SC  FC  FC  CC  FC  FC  CC  FC  FC
     CC  FC  FC  CC  FC  FC  CC  FC  FC  SC  FC  FC  CC  FC  FC  CC  FC  FC  CC
       FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC
         FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC
           CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC
             FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC
               FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC
                 CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC
                   FC  CC  FC  FC  CC  FC  FC  CC  FC  FC  CC  FC
                     BP  FC  CC  FC  FC  CC  FC  FC  CC  FC  BP
Center
Section Y 0
END ! This is a must
